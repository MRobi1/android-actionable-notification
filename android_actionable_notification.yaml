blueprint:
  name: Android Actionable Notification
  description: >-
    A script that sends an actionable notification to Android devices with up to 3 actionable buttons.
  domain: script
  source_url: https://github.com/home-assistant/core/blob/919f4dd719ac2551ca63a93780852bba1aadd7b0/homeassistant/components/script/blueprints/confirmable_notification.yaml
  input:
    notify_device:
      name: Notification service
      description: Notification service name (ex. Notify.mobile_app_....). Note that device/s needs to run the official Home Assistant app to receive notifications.
      selector:
        device:
          integration: mobile_app
    title:
      name: "Title"
      description: "The title of the button shown in the notification."
      default: ""
      selector:
        text:
    message:
      name: "Message"
      description: "The message body"
      selector:
        text:
    icon:
      name: (Optional) Icon
      description: MDI Icon to use for notification such as mdi:cctv Leaving blank will use the Home Assistant icon.
      default: ''
      selector:
        icon:
    color:
      name: (Optional) Color - Android Specific
      description: Color for icon. Can be color name or hex value. Leaving blank will use the Home Assistant blue.
      default: ''     
    priority:
      name: Notification Priority - Android Specific
      description: Priority level for notification
      default: 'default'
      selector:
        select:
          mode: dropdown
          options:
            - high
            - low
            - max
            - min
            - default
    sticky:
      name: (Optional) Sticky - Android Specific
      description: When enabled, the notification will stay active on the device after interacting with it and remain there until cleared.
      default: false
      selector:
        boolean: {}
    channel:
      name: (Optional) Channel - Android Specific
      description: Create a new channel for notifications to allow custom notification sounds, vibration patterns and overide of Do Not Disturb mode. Configured directly on the device.
      default: ''
      selector:
        text:
    tag:
      name: "Notification Tag"
      description: "notification tag for updating and dismissing the notification"
      default: ''
      selector:
        text:
    timeout:
        name: "Timeout duration"
        default: {}
        selector:
          duration:
    image:
      name: "Image"
      description: "Path to optional image to attach with message"
      default: {}
      selector:
        text:
    click_action:
      name: Click Action
      description: What to open when the notification is clicked. Can be a URL, a relative URL to your Home Assistant instance such as /lovelace/test, or an Android application such as app://<package_name>. 
      default: ''
      selector:
        text:
    action_1_title:
      name: First action name
      description: Name of the first button
      default: ""  
    action_1_uri:
      name: URI for action 1 (Optional)
      description: Optional URI for the first action
      default: ""
    first_action:
      name: Action 1
      description: "Action to run when the first action is clicked"
      default: []
      selector:
        action:
    action_2_title:
      name: Second action name
      description: Name of the second button
      default: ""
    action_2_uri:
      name: URI for action 1 (Optional)
      description: Optional URI for the second action
      default: ""
    second_action:
      name: Action 2
      description: Action to run when the second action is clicked"
      default: []
      selector:
        action:
    action_3_title:
      name: Third action name
      description: Name of the third button
      default: ""      
    action_3_uri:
      name: URI for action 3 (Optional)
      description: Optional URI for the third action
      default: ""
    third_action:
      name: Action 3
      description: "Action to run when the third action is clicked"
      default: []
      selector:
        action:
mode: restart
max_exceeded: silent

variables:
  action_1_title: !input action_1_title
  action_1_uri: !input action_1_uri
  first_action: !input first_action
  action_2_title: !input action_2_title
  action_2_uri: !input action_2_uri
  second_action: !input second_action
  action_3_title: !input action_3_title
  action_3_uri: !input action_3_uri
  third_action: !input third_action
  
sequence:
  - alias: "Send notification"
    service: !input notify_device
    data:
      message: !input message 
      title: !input title
      data:
        color: !input color
        channel: !input channel
        sticky: !input sticky
        notification_icon: !input icon
        image: !input image
        importance: !input priority
        clickAction: !input 'click_action'
        ttl: 0
        actions: >
          {% set titles = [action_1_title, action_2_title, action_3_title] %}
          {% set uris = [action_1_uri, action_2_uri, action_3_uri] %}
          {% set actions = namespace(data = []) %}
  
          {% for title in titles %}
            {% if title|length %}
              {% set uri = uris[loop.index - 1] %}
              {% set action_name = "action" + loop.index|string %}
              {% set action = {
                "action": "URI" if uri|length else action_name,
                "title": title,
                "uri": uri 
                }
              %}
              {% set actions.data = actions.data + [action] %}
            {% endif %}
          {% endfor %}
          {{ actions.data }}
        tag: !input tag
        
  - alias: "Awaiting response"
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
  - choose:
    - conditions: "{{ wait.trigger.event.data.action == 'action1' }}"
      sequence: !input first_action
    - conditions: "{{ wait.trigger.event.data.action == 'action2' }}"
      sequence: !input second_action
    - conditions: "{{ wait.trigger.event.data.action == 'action3' }}"
      sequence: !input third_action
